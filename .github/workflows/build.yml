name: Build

on:
    push:
        branches: [main]

jobs:
    build:
        strategy:
            fail-fast: false
            matrix:
                include:
                    - os: windows-latest
                      name: win
                      backend: WebView2
                      cpack_generator: NSIS
                    - os: ubuntu-latest
                      name: linux
                      container: archlinux:base-devel
                      backend: WebKitGtk
                      cpack_generator: TGZ

        name: Build on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        container: ${{ matrix.container }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup build dependencies (Arch)
              if: matrix.container == 'archlinux:base-devel'
              run: |
                  pacman --noconfirm -Syu cmake gcc git xorg-server-xvfb xorg-xwd openssh tmate dbus python gtk4 libadwaita webkitgtk-6.0 nodejs npm

            - name: Setup build dependencies (Windows)
              if: matrix.os == 'windows-latest'
              run: |
                  choco upgrade cmake --install-arguments='"ADD_CMAKE_TO_PATH=System"' -y
                  choco install nsis -y
                  choco install nodejs-lts -y
                  refreshenv
              shell: powershell

            - name: Build(frontend)
              run: |
                  npm install -g pnpm
                  pnpm install
                  pnpm run build

            - name: Configure (CMake)
              run: cmake -B build -DCMAKE_BUILD_TYPE=Release -Dsaucer_backend=${{ matrix.backend }}

            - name: Build(CMake)
              run: cmake --build build --config Release --parallel

            - name: Package with CPack
              id: cpack
              run: |
                  cd build
                  cpack -G "${{ matrix.cpack_generator }}"
              continue-on-error: true

            - name: Display NSIS logs (Windows)
              if: matrix.os == 'windows-latest' && steps.cpack.outcome == 'failure'
              run: |
                  echo "=== NSIS Output Log ==="
                  if (Test-Path "build/_CPack_Packages/win64/NSIS/NSISOutput.log") {
                      Write-Host "--- NSISOutput.log ---"
                      Get-Content "build/_CPack_Packages/win64/NSIS/NSISOutput.log"
                  } else {
                      echo "NSISOutput.log not found"
                  }

                  echo ""
                  echo "=== NSIS Generated Files ==="
                  if (Test-Path "build/_CPack_Packages/win64/NSIS") {
                      Get-ChildItem -Recurse "build/_CPack_Packages/win64/NSIS" -File | Select-Object FullName, Length, LastWriteTime | Format-Table -AutoSize
                  }

                  echo ""
                  echo "=== NSIS project.nsi (first 100 lines) ==="
                  if (Test-Path "build/_CPack_Packages/win64/NSIS/project.nsi") {
                      Get-Content "build/_CPack_Packages/win64/NSIS/project.nsi" -TotalCount 100
                  }
              shell: powershell
              continue-on-error: true

            - name: Exit if cpack failed
              if: steps.cpack.outcome == 'failure'
              run: exit 1

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: TheHQProject-${{ matrix.name }}
                  path: |
                      build/TheHQProject-*.exe
                      build/TheHQProject-*.tar.gz
                  if-no-files-found: error
                  retention-days: 90
